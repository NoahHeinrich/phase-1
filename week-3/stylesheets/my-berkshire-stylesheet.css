/** Display table when screen width = 800px **/
@media (min-width: 50em) {
  .row { width: 100%; display: table; table-layout: fixed; }
  .col { display: table-cell; }
}

@media (max-width: 479px) {
  .col {
    width: 100% !important;
  }
}

.col {
  text-align:left;
}

html {
  background-color: white;
  color:navy;
}

summary {
  padding-top: 0.6em;
  text-decoration: underline;
  color:red;
  font-size: 1.5em;
}

small {
  padding-bottom: 20px;
}

h1 {
  font-size: 1.7em;
  -webkit-margin-before: 0em;
  -webkit-margin-after: 0em;
  -webkit-margin-start: 0px;
  -webkit-margin-end: 0px;
  display: inline-block;
}

h1::first-letter {
  font-size: 200%;
}

h2 {
  font-size: 1em;
  -webkit-margin-before: 1em;
  -webkit-margin-after: 0em;
  -webkit-margin-start: 0px;
  -webkit-margin-end: 0px;
  display: inline-block;
}

a{
  color:purple;
}

a:visited {
  color:red
}

li {
  padding-top:2em;
  padding-top:2em;
}

div.line
{
  clear:both;
  width:100%;
  background-color:#d1d1d1;
  height:1px;
  margin-top:10px;
  margin-bottom:10px;
}

.header {
  text-align: center;
}

.textCenter {
  text-align: center;
}

.alignCenter {
  margin: auto;
  padding: 10px;
}

.geico {
  max-width: 600px;
}

.smallFont {
  font-size:0.800em;
  line-height:1.3em;
}

.listEntry {
  text-decoration: underline;
  font-size:1.5em;
  line-height: 1.5em;
}

.listInfo {
  text-decoration: none;
  font-size:1.2em;
  line-height: 1.2em;
}

.listMargins {
  padding-left:8%;
  padding-right:8%;
}

.contact {
  font-size: 1.33em;
}

.adress {
  font-size: 1.4em;
  font-weight: bold;
  padding-bottom: 0.6em;
}



/**
 _____  _____
(__  / (__  /
  / /    / /
 (__ \  (__ \
 ___) ) ___) )
(____(_|____/

What is important to know when linking an external file (like a stylesheet) to an HTML file?
********************************************************************************************
The order of assets importation and the impact this possibly can have on the rendering engine of your browser. As bottom always win, you will always want to add the most specific stylesheet below the default one, so specific styles originally written in the default css can be over written. Also, it's important knowing the difference between absolute and relative links.

What tricks did you use to help you with positioning? How hard was it to get the site as you wanted it?
*******************************************************************************************************
We used @media in order to get screen widh and draw 2 or one column referring to screen size.
Then we styled list items separatly.

What CSS did you use to modify the element style (like size, color, etc.)
*************************************************************************
Atomic classes, with em properties for bot both text-size and line-height, then classic color names.

Did you modify the HTML to include classes or ids? If so, which did you chose and why? If you didn't, how would you know which one to add to your HTML?
*******************************************************************************************************************************************************
Classes, check my blog post about the difference: http://gastongouron.github.io/blog/css-concepts.html

When you compared your site to the actual code base, which do you think had cleaner code that followed best practices and why?
******************************************************************************************************************************
Our site is cleaner for the following reasons:
1. we used a layout based on a responsive column system, and adapts to lower screens
2. we dont use px properties in the css, making the site easier to maintain
3. we use CSS and classes and the first site was using only pure HTML
4. we use semantic minimal html, making our code easier to read
5. we added interactivity in the footer with the <summary> html5 tag for the legal disclaimer
6. any of oour style can be changed in two clicks and applied to the whole page from an external file.
**/
